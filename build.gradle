apply plugin: "java"
apply plugin: "eclipse"
apply plugin: 'org.hidetake.ssh'

sourceCompatibility = 1.7
version = '1.0'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceSets.main.java.srcDirs = ["src/main/java/"]
sourceSets.test.java.srcDirs = ["src/test/java/"]
sourceSets.main.resources.srcDirs = ["src/main/resources/"]
sourceSets.test.resources.srcDirs = ["src/test/resources/"]

buildscript {
	repositories { jcenter() }
	dependencies { classpath 'org.hidetake:gradle-ssh-plugin:1.1.3' }
}

ext{
	commonsDaemonVersion = '1.0.15'
	log4jVersion = '2.4.1'
	projectName = 'jmatcher'
	artifactName = projectName + '-' + version + '.jar'
}

eclipse.project { name = projectName }

repositories {
	mavenCentral()
	maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
	maven { url "https://oss.sonatype.org/content/repositories/releases/" }
	jcenter()
}

dependencies {
	compile "commons-daemon:commons-daemon:$commonsDaemonVersion"
	compile "org.apache.logging.log4j:log4j-api:$log4jVersion"
	compile "org.apache.logging.log4j:log4j-core:$log4jVersion"
	testCompile "junit:junit:+"
	testCompile "org.exparity:hamcrest-date:1.0.1"
	testCompile "com.googlecode.jmockit:jmockit:1.4"
}

jar {
	from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}

// Deploy to a server
// https://gradle-ssh-plugin.github.io/
remotes {
	jsvcServer {
		host = 'nog-jserver1.servehttp.com'
		user = 'ec2-user'
		knownHosts = allowAnyHosts
		identity = file('***')
	}
}

task deploy(dependsOn: jar) << {
	ssh.run {
		session(remotes.jsvcServer) {
			put from: projectDir.getAbsolutePath() + '/build/libs/' + artifactName, into: '/usr/local/jmatcher'
			execute('sudo service jsvcd restart', pty: true)
		}
	}
}